events {
   worker_connections 1024;
}

http {
   server {
       include mime.types;
       default_type application/octet-stream;
       sendfile on;
       keepalive_timeout 65;
       listen 443 ssl;

       # CORS headers 
       add_header 'Access-Control-Allow-Origin' '*' always;
       add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
       add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
       add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
        
       
       # Requests to /static/ are served directly from the /static/ directory
       location /static/ {
           alias /static/;
           expires 30d;
           add_header Cache-Control "public, immutable";
       }

       # Configuration for serving media files
       location /media/ {
         alias /home/app/web/mediafiles/;
       }

       # Handles all other requests
       location / {
           # Forward requests to Django application
           proxy_pass http://web:8000;

           # Pass important headers to Django for proper request handling
           proxy_set_header Host $host;                          # Original host header
           proxy_set_header X-Real-IP $remote_addr;             # Client's real IP
           proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # Chain of IP addresses
           proxy_set_header X-Forwarded-Proto $scheme;          # Original protocol (http/https)
       }
   }

   # Optional HTTP redirect to HTTPS
   server {
        listen 80;
        server_name localhost;

        location / {
            return 301 https://$host$request_uri;
        }
    }
}
